<?php
/**
 * @file connections.php
 * @brief Controller to handle connections
 *
 * @defgroup ctr Controllers
 * @ingroup ctr
 * @{
 */

class Connections extends Controller {

	function __construct(){
		parent::Controller();
		$this->load->library('ajax');
		$this->load->library('auth');
	}

	/**
	 * default view
	 * @attention should never be accessible
	 * @return error
	 * */
	function index() {
		show_error('Direct access to this resource is forbidden', 500);
		return;
	}

	/**
<<<<<<< HEAD:system/application/controllers/connections.php
	 * List all hcps that current user is connected with
	 * 
	 * @note Available for both patients and hcps
	 * 
	 * @return: List view of my hcps
=======
	 * lists all hcps that user is connected with.
	 * 
	 * @attention
	 * 		only available for patients
>>>>>>> 14270249d2f7dd56deeecd425d033b8e31abb8cd:system/application/controllers/connections.php
	 * */
	function myhcps() {
		$this->auth->check_logged_in();

		$this->load->model('connections_model');
		
		if ($this->auth->get_type() === 'patient') {
			$results  = $this->connections_model->list_my_hcps($this->auth->get_account_id()); 
			$sidepane = 'sidepane/patient-profile';
		}
		else if ($this->auth->get_type() === 'hcp'){
			$results  = $this->connections_model->list_my_colleagues($this->auth->get_account_id()); 
			$sidepane = 'sidepane/hcp-profile';
		}
		else {
			show_error('Internal server logic error.', 500);
			return;
		}
		
		switch ($results) {
			case -1:
				$mainview = 'Query error!';
				$sideview = '';
				break;
			default:
				$mainview = $this->load->view('mainpane/myhcps', array('hcp_list' => $results) , TRUE);
				$sideview = $this->load->view($sidepane, '', TRUE);
				break;
		}
		
		// Give results to the client
		$this->ajax->view(array($mainview,$sideview));
	}

	/**
<<<<<<< HEAD:system/application/controllers/connections.php
	 * List all patients that current hcp is connected with
	 * 
	 * @note Only available for hcps
	 * 
	 * @return: List view of patients
=======
	 * lists all patients that hcp is connected with.
	 * 
	 * @attention
	 * 		only available for hcps
	 * 
>>>>>>> 14270249d2f7dd56deeecd425d033b8e31abb8cd:system/application/controllers/connections.php
	 * */
	function mypatients()
	{
		$this->auth->check_logged_in();
		
		if ($this->auth->get_type() !== 'hcp'){
			show_error($this->load->view('errors/not_hcp', '', TRUE));
			return;
		}

		$this->load->model('connections_model');
		$res = $this->connections_model->list_my_patients($this->auth->get_account_id()); 

		// Switch the response from the model, to select the correct view
		switch ($res) {
			case -1:
				$mainview = 'Query error!';
				$sideview = '';
				break;
			default:
				$mainview = $this->load->view('mainpane/mypatients', array('pat_list' => $res) , TRUE);
				$sideview = $this->load->view('sidepane/hcp-profile', '', TRUE);
				break;
		}
		
		// Give results to the client
		$this->ajax->view(array($mainview,$sideview));
	}
	
	/**
	 * Lists the pending connections that this user has initiated
	 * 
	 * @param
	 *   $direction
	 *   If it is 'out', it lists pending outgoing connections,
	 *   otherwise it lists pending incoming connections.
	 * 
	 * @attention Only hcps can see pending(in)
	 * */
	function pending($direction = 'in')
	{
		if ($direction == 'in') {
			if ($this->auth->get_type() === 'hcp') {
				$this->_pending_in();
			} else {
				show_error($this->load->view('errors/not_hcp', '', TRUE));
			}
		} else {
			$this->_pending_out();
		}
	}
	
	/**
	 * Private function to list all pending outgoing connection requests
	 * */
	function _pending_out()
	{
		$this->auth->check_logged_in();
		$this->load->model('connections_model');
		
		if ($this->auth->get_type() === 'hcp') {
			$res = $this->connections_model->pending_tohcps_fromhcp(array($this->auth->get_account_id())); 
			$sidepane = 'sidepane/hcp-profile';
		}
		else if ($this->auth->get_type() === 'patient') {
			$res = $this->connections_model->pending_tohcps_frompatient(array($this->auth->get_account_id())); 
			$sidepane = 'sidepane/patient-profile';
		}
		else {
			show_error('Internal server logic error.', 500);
			return;
		}

		// Switch the response from the model, to select the correct view
		switch ($res) {
			case -1:
				$mainview = 'Query error!';
				$sideview = '';
				break;
			default:
				$mainview = $this->load->view('mainpane/mypatients', array('pending_list' => $res) , TRUE);
				$sideview = $this->load->view($sidepane, '', TRUE);
				break;
		}
		
		// Give results to the client
		$this->ajax->view(array($mainview,$sideview));
	}
	
<<<<<<< HEAD:system/application/controllers/connections.php
	/**
	 * Private function that lists all pending connections that this 
	 * user has received (incoming)
=======
	/* 
	 * Lists the pending connections that this user has received(incoming)
	 * @attention
	 * 		only hcps have this
>>>>>>> 14270249d2f7dd56deeecd425d033b8e31abb8cd:system/application/controllers/connections.php
	 * */
	function _pending_in() 
	{
		$this->auth->check_logged_in();
		$this->load->model('connections_model');
		
		if($this->auth->get_type() === 'hcp'){
			$res = $this->connections_model->pending_tohcp_fromhcps(array($this->auth->get_account_id())); 
			$res2 = $this->connections_model->pending_tohcp_frompatients(array($this->auth->get_account_id())); 
			$sidepane = 'sidepane/hcp-profile';
		}
		else {
			show_error('Internal server logic error.', 500);
			return;
		}

		// Switch the response from the model, to select the correct view
		switch ($res) {
			case -1:
				$mainview = 'Query error!';
				$sideview = '';
				break;
			default:
				$mainview = $this->load->view('mainpane/mypatients', array('pending_hcp' => $res,'pending_pat' => $res2) , TRUE);
				$sideview = $this->load->view($sidepane, '', TRUE);
				break;
		}
		
		// Give results to the client
		$this->ajax->view(array($mainview,$sideview));
	}
	
	/**
	 * Request a new connection to a hcp.
	 * 
	 * @param
	 *   $id is the id of a hcp you want to connect to
	 * 
	 * @attention
	 *   Can be called by both patients and hcps, but a 
	 * hcp can only request for another hcp and a patient can 
	 * only request for a hcp.
	 * */
	function request($id = NULL)
	{
		$this->auth->check_logged_in();
		$this->load->model('hcp_model');
		$this->load->model('connections_model');
		
		// Check if an account_id has been specified
		if ($id == NULL) {
			show_error('No hcp_id specified.');
			return;
		}
		
		// Check if the account_id specified refers to a hcp
		if (!$this->hcp_model->is_hcp(array($id))) {
			show_error('The id specified does not refer to an HCP.');
			return;
		}
		
		// Get all the hcp's info
		$results = $this->hcp_model->get_hcp(array($id));
		
		// If current user is a hcp
		if ($this->auth->get_type() === 'hcp') {
			$res = $this->connections_model->add_hcp_hcp(array(
										$this->auth->get_account_id(),
										$id
										));
		}
		// If current user is a patient
		else if ($this->auth->get_type() === 'patient') {
			$res = $this->connections_model->add_patient_hcp(array(
										$this->auth->get_account_id(),
										$id
										));
		}
		else {
			show_error('Internal server logic error.', 500);
			return;
		}
		
		// Switch the response from the model, to select the correct view
		switch ($res) {
			case -1:
				$mainview = 'Query error!';
				$sideview = '';
				break;
			case -3:
				$mainview = 'This connection has been already requested.';
				$sideview = '';
				break;
			default:
				$mainview = 'Your request has been submitted.';
				$sideview = '';
				$this->load->library('email');
				$config['mailtype'] = 'html';
				$this->email->initialize($config);
				//$this->email->from($this->auth->get_email());
				$this->email->from('salute-noreply@salute.com');
				//$this->email->to($results['email']);
				$this->email->to('mattfeel@gmail.com');
				$this->email->subject('New Connection Request');
				
				$this->email->message(
					'You have a new connection request from '.
					$this->auth->get_first_name().' '.$this->auth->get_last_name().
					'. Click <a href="https://'.$_SERVER['SERVER_NAME'].'/connections/accept/'.$this->auth->get_account_id().'/'.$id.'">here</a> to accept.');
				
				$this->email->send();
				break;
		}
		
		// Give results to the client
		$this->ajax->view(array($mainview,$sideview));
	}

	/** 
	 * Accept an existing connection request
	 * 
	 * @attention Only hcps can do this
	 * */
	function accept($requester_id = NULL, $my_id = NULL) 
	{
		$this->auth->check_logged_in();
		$this->load->model('connections_model');
		$this->load->model('hcp_model');
		$this->load->model('patient_model');
		
		// Check if parameters are specified
		if ($requester_id == NULL || $my_id == NULL) {
			show_error('ids not specified.', 500);
			return;
		}
		
		// Check if the current user is the receiver
		if ($this->auth->get_account_id() != $my_id) {
			show_error('You are not the receiver for this request');
			return;
		}
		
		// Check if you are a hcp (only hcp can call this function)
		if ($this->auth->get_type() != 'hcp') {
			show_error('Sorry, only HCP can accept connection requests');
			return;
		}
		
		if ($this->patient_model->is_patient(array($requester_id))) {
			$res = $this->connections_model->accept_patient_hcp(array($requester_id,$my_id));
		}
		else if ($this->hcp_model->is_hcp(array($requester_id))) {
			$res = $this->connections_model->accept_hcp_hcp(array($requester_id, $my_id));
		}
		else {
			show_error('The requester id does not match any id in the database', 500);
			return;
		}
		
		// Switch the response from the model, to select the correct view
		switch ($res) {
			case -1:
				$mainview = 'Query error!';
				$sideview = '';
				break;
			case -2:
				$mainview = 'Connection does not exists.';
				$sideview = '';
				break;
			case -3:
				$mainview = 'This connection has already been accepted.';
				$sideview = '';
				break;
			default:
				$mainview = 'You have accepted the connection.';
				$sideview = '';
				break;
		}
		
		// Give results to the client
		$this->ajax->view(array($mainview,$sideview));
	}

	/*
	 * deletes connection (un-friend someone)
	 * @param
	 * 		id is the account_id of the hcp the user would like to disconnect from
	 * @return 
	 * 		error 
	 * 			id not specified (the one to disconnect from)
	 * 			query fails
	 * 			connection doesnt exist
	 * 		success: deleted the connection
	 */
	function destroy($id = NULL)
	{
		$this->auth->check_logged_in();
		
		if ( $id == NULL ){
			show_error('id not specified.', 500);
			return;
		}
		
		$this->load->model('connections_model');
		$this->load->model('hcp_model');
		$this->load->model('patient_model');

		if ( $this->patient_model->is_patient(array($id)) ){
			$res = $this->connections_model->remove_pd_connection(array('patient_id' => $this->auth->get_account_id() , 'hcp_id' => $id )); 
		}
		else if ($this->hcp_model->is_hcp(array($id))) {
			$res = $this->connections_model->remove_dd_connection(array('this_hcp_id' => $this->auth->get_account_id() , 'hcp_id' => $id )); 
		}
		else {
			show_error('Internal Logic Error.', 500);
			return;
		}
		
		// Switch the response from the model, to select the correct view
		switch ($res) {
			case -1:
				$view = 'Query error!';
				break;
			case -2:
				$view = 'Connection does not exists.';
				break;
			default:
				$view = 'You have been disconnected from that health care provider.';
				break;
		}
		
		// Create final view for the user
		$this->ajax->view(array(
			$view,
			''
		));
	}
}

/** @} */
?>
